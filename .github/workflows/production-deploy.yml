name: 构建并部署production

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  image-build-deployment:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://remagent.net/
    steps:
      -
        name: 检出代码
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Docker 元信息
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ccr.ccs.tencentyun.com/remagent/webapp
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest
          flavor: |
            latest=auto
      -
        name: 登录 Coding 制品库
        uses: docker/login-action@v1
        with:
          registry: ccr.ccs.tencentyun.com
          username: ${{ secrets.CODING_USER }}
          password: ${{ secrets.CODING_TOKEN }}
      -
        name: 构建并推送
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            "NEXT_PUBLIC_SITE_URL=https://remagent.net"
      - name: Trigger dokploy redeploy
        run: |
          curl -X GET ${{ secrets.DEPLOY_WEBHOOK_URL }}
      -
        name: 群通知
        if: github.ref == 'refs/heads/main'
        run: >
          curl -X POST https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=${{ secrets.WECHAT_WEBHOOK_KEY }} \
            -H 'Content-Type: application/json' \
            -d '{
                  "msgtype": "markdown",
                  "markdown": {
                    "content": "${{ github.repository }}即将完成部署\n
          > 分支: `${{ github.ref_name }}`\n
          > 版本: `'${{ github.sha }}'`"
                  }
                }'
